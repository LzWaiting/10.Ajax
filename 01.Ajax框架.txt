AJAX 在 Web 中主要完成 异步的请求和响应
    1. 什么是AJAX
        Asynchronous Javascript And Xml
	通过JS异步的向服务器发送请求并接收响应数据
	同步访问：
	    当客户端向服务器发送请求时，服务器在处理的过程中，浏览器只能等待，效率较低
	异步访问：
	    当客户端向服务器发送请求时，服务器在处理的过程中，客户端可以做其他的操作，不需要一直等待
        1. AJAX 优点
            1. 异步 访问
	    2. 局部 刷新
        2. 使用场合
            1. 搜索建议
	    2. 表单验证
	    3. 前后端完全分离
    2. AJAX 核心对象 - 异步对象（XMLHttpRequest）
        1. 什么是XMLHttpRequest
	    简称XHR,异步对象
	    代替浏览器向服务器发送异步的请求并接收响应
	    xhr 是由JS来提供的
	2. 创建 异步对象（xhr）
	    主流的异步对象是 XMLHttpRequest 类型的，
	    并且主流浏览器(IE7+,Chrome,Firefox,Safari,Opera)全部都支持 XMLHttpRequest,
	    但在IE低版本浏览器中（IE6以及以下），就不支持XMLHttpRequest,需要使用ActiveXObject()来创建异步对象
	    <script>
	        if(window.XMLHttpRequest){
		    // 支持XMLHttpRequest
		    var xhr = new XMLHttpRequest();
		}else{
		    // 不支持XMLHttpRequest
		    var xhr = new ActiveXObject("Microsoft.XMLHTTP");
		}
	    </script>
        3. xhr 的成员
	    1. 方法
	        1. open()
		    作用：创建请求
		    语法：open(method,url,asyn)
		        method:请求方式，取值‘get’或‘post’...
			url:请求地址，字符串
			asyn:是否采用异步的方式，取值true:异步，false:同步
		    et:
		        xhr.open('get','/server',true);
		2. send()
		    作用：通知xhr向服务器端发送请求
		    语法：send(body)
		        get请求：body的值为null
			post请求：body的值为要提交的数据，send('请求数据')
	    2. 属性
	        1. readyState
		    作用：请求状态，通过不同的请求状态来表示xhr与服务器的交互情况
		    返回值：
		        由0-4共5个值来表示5个不同的状态
			0：请求尚未初始化
			1：已经与服务器建立连接
			2：服务器端已接收请求
			3：请求正在处理中
			4：响应已经完成
		2. status
		    作用：服务器端的响应状态码
		        200：表示服务器正确处理所有的请求以及给出响应
			404：请求资源不存在
			500：服务器内部错误
		3. responseText
		    作用：响应数据
	    3. 事件 -onreadystatechange
	        作用：每当xhr的readyState发生改变时都要触发的操作，回调函数
		只有当readyState的值为4，并且status的值为200的时候，才可以正常的去接收并响应数据（responseText）
	4. AJAX 的操作步骤
	    1. GET 请求
	        1. 创建 xhr 对象
		2. 创建请求-open()
		请求参数：
		    推荐：请求地址后拼接QueryString
		        xhr.open('get','/server?参数1=值1&参数2=值2&...',true)
		3. 设置回调函数-onreadystatechange
		    判断状态并接收响应数据
		4. 发送请求-send(null)
	    2. POST 请求
	        1. 创建 xhr 对象
		2. 创建请求 xhr.open('post',url,true)，此处的url不可拼接参数
		3. 设置回调函数 xhr.onreadystatechange=function(){};
		4. 发送请求 xhr.send(body)
		请求参数:
		    推荐：请求地址后拼接QueryString
		        xhr.send("参数1=值1&参数2=值2&...")
		注意：
		    ajax 的post请求，会把Content-Type 请求消息头的值修改为"text/plain;charset=UTF-8",导致了服务器端没有办法正常接收数据
		解决办法：在xhr.send()前将Content-Type请求消息头的值再更改回application/x-www-form-urlencoded 即可